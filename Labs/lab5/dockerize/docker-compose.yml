version: '3'
 
services:

  database:
    image: mongo:latest
    container_name: mongo
    # volumes:
    #   - ./database:/data
    networks:
      - backendNetwork
    ports:
      - "27017:27017"

  springapi:
    image: openjdk:8-jdk-alpine
    container_name: server-millepedibus
    environment:     
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_HOST: database
      SPRING_DATA_MONGODB_DATABASE: millepedibus
    depends_on:
      - database
    volumes:
      - ../server/target/${APP_JAR_NAME}.jar:/application.jar
    command: ["java", "-jar", "application.jar", "${ARGS_SERVER}"]
    ports:
      - 8080:8080
    networks:
      - backendNetwork
      - frontendNetwork
  # WITH DOCKERFILE
  # springapi:
  #   image: lab5/server:${APP_IMAGE_VERSION}
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.server
  #   container_name: server-millepedibus
  #   environment:     
  #     SPRING_DATA_MONGODB_PORT: 27017
  #     SPRING_DATA_MONGODB_HOST: database
  #     SPRING_DATA_MONGODB_DATABASE: millepedibus
  #   depends_on:
  #     - database
  #   networks:
  #     - backendNetwork
  #     - frontendNetwork
  #   ports:
  #     - "8080:8080"
       
  angular:
    image: nginx:alpine
    container_name: angular
    ports: 
      - 4200:80
    depends_on:
      - springapi
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../client/dist/client/:/usr/share/nginx/html
    networks:
      - frontendNetwork
     
volumes:
  database:
   
networks:
  backendNetwork:
  frontendNetwork:
